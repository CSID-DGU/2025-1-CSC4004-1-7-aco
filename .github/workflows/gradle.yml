name: Deploy to EC2

on:
  push:
    branches: [ dev ]  # dev 브랜치에 push 될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build BE module with Gradle
        run: |
          chmod +x gradlew
          ./gradlew :BE:clean :BE:build
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: BE/build/libs/*.jar
          target: ~/app/BE/build/libs/

      - name: Run Spring Boot app on EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          script: |
            echo "Killing any running Spring Boot apps..."
            pkill -f 'java -jar' || true

            echo "Starting new Spring Boot app..."
            nohup java -DOPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
              -jar ~/app/BE/build/libs/*.jar > ~/app/log.txt 2>&1 &
